<script>
var tag = document.createElement('script');
tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag 	= document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
var socket = io.connect('<%= locals.website %>');
var vids = new Array;

socket.emit('refreshData')

socket.on('pushSonglist', function (data) {
	console.log(data)
	vids.length = 0
	vids = data
})

socket.on('nextSong', function (data) {
	nextVideo();
	socket.emit('refreshData');
})

socket.on('setVolume', function(vol) {
	var volume = parseInt(vol.volume)
	player.setVolume(volume)
})

socket.on('getVolume', function() {
	var vol = player.getVolume()
	socket.emit('returnVolume', {"volume": vol})
})

function onYouTubeIframeAPIReady() {
	setTimeout(function() {
		player = new YT.Player('player', {
			height: '360',
			width: '640',
			videoId: vids[0].songid,
			events: {
				'onReady': onPlayerReady,
				'onStateChange': onPlayerStateChange
			}
		});
	}, 100);
}

function onPlayerReady(event) {
	event.target.playVideo();
}

function previousVideo() {
	socket.emit('prevSong')
	socket.on('prevSongInfo', function (data) {
		console.log(data)
		player.loadVideoById({
			'videoId': data[0].songid,
			'startSeconds': 0,
			'endSeconds': <%= srMaxLength %>,
			'suggestedQuality': 'large'
		});
		socket.emit('refreshData');
	})
}

function skipVideo() {
	nextVideo();
	socket.emit('endSong', vids[0].songid)
	socket.emit('refreshData');
}

socket.on('nextSong', function (data) {
	nextVideo();
	socket.emit('refreshData');
})

function nextVideo() {
	player.loadVideoById({
		'videoId': vids[1].songid,
		'startSeconds': 0,
		'endSeconds': <%= srMaxLength %>,
		'suggestedQuality': 'large'
	});
}

var getSongName = setInterval(function () {
	title = vids[0].title
	user = vids[0].name
	$(".videoTitle").html("<b>Current song</b>: " + title + "<br>" + "<b>Requested by</b>: " + user);
}, 5000);

function onPlayerStateChange(event) {
	if (event.data == YT.PlayerState.ENDED) {
		socket.emit('endSong', vids[0].songid)
		socket.on('nextSong', function (data) {
			nextVideo();
			socket.emit('refreshData');
			event.target.playVideo();
		})
	}
	if (event.data == -1) {
		socket.emit('refreshData')
		event.target.playVideo();
	}
}

var yucibot = angular.module('yucibot',[]);
yucibot.controller('songQueue', function($scope, $http, $log, $interval) {
	$scope.getVideos = function() {	
		var total = 0;
	  for(count = 0; count < vids.length; count++){
	  	if (vids[count].length < 600) {
	  		total += vids[count].length
	  	} else {
	  		total += 600
	  	}
	  }
		var h = Math.floor(total / 3600);
		var m = Math.floor(total % 3600 / 60);
		var s = Math.floor(total % 3600 % 60);
	  $scope.length = (h > 0 ? h + ":" + (m < 10 ? "0" : "") : "") + m + ":" + (s < 10 ? "0" : "") + s
		if(vids[0]) {
			$scope.allSongs = vids
		}
	}
	$scope.skip = function(id) {
		socket.emit('removeSong', id)
		socket.emit('refreshData')
	}
	$scope.getVideos()
	$interval($scope.getVideos, 1000);
})
</script>
